import pandas as pd
import os
import matplotlib.pyplot as plt
import seaborn as sns

# üì• –ü—É—Ç–∏ –∫ –º–µ—Ç—Ä–∏–∫–∞–º
before_path = "metrics/traffic_metrics_before1.csv"
after_path = "metrics/traffic_metrics_before8.csv"

# ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
before = pd.read_csv(before_path)
after = pd.read_csv(after_path)

# üìä –ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
metrics = ["VEHS", "QUEUEDELAY", "SPEEDAVGARITH", "QLEN", "QLENMAX"]

# üåê –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ OBJECT_ID
before_grouped = before.groupby("OBJECT_ID")[metrics].mean()
after_grouped = after.groupby("OBJECT_ID")[metrics].mean()

# ‚ûï –†–∞–∑–Ω–∏—Ü–∞
diff = after_grouped - before_grouped
percent = (diff / before_grouped) * 100

# üìà –û–±—â–∏–π –æ—Ç—á—ë—Ç
summary = pd.concat([before_grouped, after_grouped, diff, percent], axis=1, keys=["Before", "After", "Delta", "%Change"])
summary = summary.round(2)

# üì§ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
os.makedirs("data", exist_ok=True)
#summary.to_csv("data/final_phase_comparison.csv")
print("\n‚úÖ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ 'data/final_phase_comparison.csv'")

# üìä –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ –∫–∞–∂–¥–æ–π –º–µ—Ç—Ä–∏–∫–µ
diff.reset_index(inplace=True)
plt.figure(figsize=(12, 6))
diff_melted = diff.melt(id_vars="OBJECT_ID", var_name="Metric", value_name="Change")
sns.barplot(data=diff_melted, x="Metric", y="Change", hue="OBJECT_ID")
plt.title("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –î–û –∏ –ü–û–°–õ–ï –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ñ–∞–∑")
plt.ylabel("–†–∞–∑–Ω–∏—Ü–∞ (After - Before)")
plt.xticks(rotation=45)
plt.tight_layout()
#plt.savefig("data/phase_metrics_difference.png")
plt.show()

print("üìä –ì—Ä–∞—Ñ–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ 'data/phase_metrics_difference.png'")

# üìò –¢–µ–∫—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
print("\nüìò –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º:")
for metric in metrics:
    delta = diff[metric].mean()
    direction = "—É–º–µ–Ω—å—à–∏–ª–∞—Å—å" if delta < 0 else "—É–≤–µ–ª–∏—á–∏–ª–∞—Å—å"
    print(f"–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏ '{metric}' {direction} –Ω–∞ {abs(delta):.2f} –µ–¥–∏–Ω–∏—Ü")

    if metric == "QUEUEDELAY" and delta < 0:
        print("‚û°Ô∏è  –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ –∑–∞—Ç–æ—Ä–µ —Å–Ω–∏–∑–∏–ª–∞—Å—å ‚Äî —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —É–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.")
    elif metric == "QUEUEDELAY" and delta > 0:
        print("‚ö†Ô∏è  –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ –∑–∞—Ç–æ—Ä–µ —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å ‚Äî –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–∫–∏.")
    elif metric == "SPEEDAVGARITHM" and delta > 0:
        print("‚û°Ô∏è  –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤—ã—Ä–æ—Å–ª–∞ ‚Äî –¥–≤–∏–∂–µ–Ω–∏–µ —Å—Ç–∞–ª–æ –±—ã—Å—Ç—Ä–µ–µ.")
    elif metric == "SPEEDAVGARITHM" and delta < 0:
        print("‚ö†Ô∏è  –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–Ω–∏–∑–∏–ª–∞—Å—å ‚Äî –≤–æ–∑–º–æ–∂–Ω—ã –∑–∞—Ç–æ—Ä—ã –∏–ª–∏ —Å–Ω–∏–∂–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.")
    elif metric in ["QLEN", "QLENMAX"] and delta < 0:
        print(f"‚û°Ô∏è  {metric} —É–º–µ–Ω—å—à–∏–ª–∞—Å—å ‚Äî –∑–∞—Ç–æ—Ä—ã —Å—Ç–∞–ª–∏ –∫–æ—Ä–æ—á–µ.")
    elif metric in ["QLEN", "QLENMAX"] and delta > 0:
        print(f"‚ö†Ô∏è  {metric} —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.")