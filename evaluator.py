import pandas as pd
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–≤—É—Ö CSV-—Ñ–∞–π–ª–æ–≤: –¥–æ –∏ –ø–æ—Å–ª–µ
before_path = "metrics/traffic_metrics_before1.csv"
after_path = "metrics/traffic_metrics_before20.csv" #–ú–ï–ù–Ø–ï–ú –ù–ê +1

phase1 = 45  # —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å —Ç–µ–∫—É—â–∏–µ —Ñ–∞–∑—ã (—Å–≤–µ—Ç–æ—Ñ–æ—Ä 1)
phase2 = 45  # –∏ —Å–≤–µ—Ç–æ—Ñ–æ—Ä 2

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ç—Ä–∏–∫
df_before = pd.read_csv(before_path)
df_after = pd.read_csv(after_path)

# –°–ø–∏—Å–æ–∫ –º–µ—Ç—Ä–∏–∫ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
metrics = ["VEHS", "QUEUEDELAY", "SPEEDAVGARITH", "QLEN", "QLENMAX"]

# –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ OBJECT_ID
before_grouped = df_before.groupby("OBJECT_ID")[metrics].mean()
after_grouped = df_after.groupby("OBJECT_ID")[metrics].mean()

# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
comparison = after_grouped - before_grouped
comparison_percent = ((after_grouped - before_grouped) / before_grouped) * 100

summary = pd.concat([before_grouped, after_grouped, comparison, comparison_percent], axis=1, keys=["Before", "After", "Diff", "%Change"])

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
pd.set_option("display.float_format", "{:.2f}".format)
print("\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ñ–∞–∑ –î–û –∏ –ü–û–°–õ–ï:")
print(summary)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤ CSV #–ú–ï–ù–Ø–ï–ú –ù–ê +1
summary_path = "data/phase_comparison_summary20.csv" #–ú–ï–ù–Ø–ï–ú –ù–ê +1
os.makedirs("data", exist_ok=True)
summary.to_csv(summary_path)
print(f"\nüìÅ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ '{summary_path}'")

# --- –î–æ–±–∞–≤–∏–º –∑–∞–ø–∏—Å—å –≤ phase_log.csv ---
avg_metrics_before = df_before[metrics].mean()
avg_metrics_after = df_after[metrics].mean()
delta_metrics = avg_metrics_after - avg_metrics_before

# –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—â—É—é –æ—Ü–µ–Ω–∫—É (–º–æ–∂–Ω–æ –ø—Ä–∏–¥—É–º–∞—Ç—å –≤–µ—Å–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∑–∂–µ)
evaluation = {
    "phase1": phase1,
    "phase2": phase2,
    "VEHICLES_before": avg_metrics_before["VEHS"],
    "QUEUEDELAY_before": avg_metrics_before["QUEUEDELAY"],
    "SPEEDAVGARITHM_before": avg_metrics_before["SPEEDAVGARITH"],
    "QLEN_before": avg_metrics_before["QLEN"],
    "QLENMAX_before": avg_metrics_before["QLENMAX"],
    "VEHICLES_after": avg_metrics_after["VEHS"],
    "QUEUEDELAY_after": avg_metrics_after["QUEUEDELAY"],
    "SPEEDAVGARITHM_after": avg_metrics_after["SPEEDAVGARITH"],
    "QLEN_after": avg_metrics_after["QLEN"],
    "QLENMAX_after": avg_metrics_after["QLENMAX"],
    "delta_QUEUEDELAY": delta_metrics["QUEUEDELAY"],
    "delta_SPEEDAVGARITHM": delta_metrics["SPEEDAVGARITH"],
    "delta_QLEN": delta_metrics["QLEN"],
    "delta_QLENMAX": delta_metrics["QLENMAX"]
}

log_path = "phase_res/phase_log.csv"
try:
    existing_log = pd.read_csv(log_path)
    updated_log = pd.concat([existing_log, pd.DataFrame([evaluation])], ignore_index=True)
except FileNotFoundError:
    updated_log = pd.DataFrame([evaluation])

updated_log.to_csv(log_path, index=False)
print(f"üìä –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∂—É—Ä–Ω–∞–ª –æ–ø—ã—Ç–∞: '{log_path}'")
